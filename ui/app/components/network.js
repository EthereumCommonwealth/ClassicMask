const Component=require('react').Component const h=require('react-hyperscript') const inherits=require('util').inherits module.exports=Network inherits(Network,Component) function Network(){Component.call(this)} Network.prototype.render=function(){const props=this.props const networkNumber=props.network let providerName try{providerName=props.provider.type}catch(e){providerName=null} let iconName,hoverText if(networkNumber==='loading'){return h('span.pointer',{style:{display:'flex',alignItems:'center',flexDirection:'row',},onClick:(event)=>this.props.onClick(event),},[h('img',{title:'Attempting to connect to blockchain.',style:{width:'27px',},src:'images/loading.svg',}),h('i.fa.fa-caret-down'),])}else if(providerName==='atheios'){hoverText='Main Atheios Network' iconName='atheios-network'}else if(providerName==='mainnet'){hoverText='Main Ethereum Network' iconName='ethereum-network'}else if(providerName==='classic'){hoverText='Main Ethereum Classic Network' iconName='ethereum-classic-network'}else if(providerName==='callisto'){hoverText='Main Callisto Network' iconName='callisto-network'}else if(providerName==='expanse'){hoverText='Main Expanse Network' iconName='expanse-network'}else if(providerName==='ubiq'){hoverText='Main Ubiq Network' iconName='ubiq-network'}else if(providerName==='social'){hoverText='Main Ethereum Social Network' iconName='social-network'}else if(providerName==='ropsten'){hoverText='Ropsten Test Network' iconName='ropsten-test-network'}else if(parseInt(networkNumber)===3){hoverText='Ropsten Test Network' iconName='ropsten-test-network'}else if(providerName==='kovan'){hoverText='Kovan Test Network' iconName='kovan-test-network'}else if(providerName==='rinkeby'){hoverText='Rinkeby Test Network' iconName='rinkeby-test-network'}else{hoverText='Unknown Private Network' iconName='unknown-private-network'} return(h('#network_component.pointer',{title:hoverText,onClick:(event)=>this.props.onClick(event),},[(function(){switch(iconName){case'ethereum-network':return h('.network-indicator',[h('.menu-icon.diamond'),h('.network-name',{style:{color:'#039396',}},'Main Network'),h('i.fa.fa-caret-down.fa-lg'),]) case'atheios-network':return h('.network-indicator',[h('.menu-icon.diamond'),h('.network-name',{style:{color:'#0099ff',}},'Atheios Main Net'),]) case'ethereum-classic-network':return h('.network-indicator',[h('.menu-icon.diamond-classic'),h('.network-name',{style:{color:'#0099ff',}},'Ethereum Classic Main Net'),]) case'callisto-network':return h('.network-indicator',[h('.menu-icon.diamond-classic'),h('.network-name',{style:{color:'#0099ff',}},'Callisto Main Net'),]) case'expanse-network':return h('.network-indicator',[h('.menu-icon.diamond-expanse'),h('.network-name',{style:{color:'#f1c70e',}},'Expanse Main Net'),]) case'ubiq-network':return h('.network-indicator',[h('.menu-icon.diamond-ubiq'),h('.network-name',{style:{color:'#f1c70e',}},'UBIQ Main Net'),]) case'social-network':return h('.network-indicator',[h('.menu-icon.diamond'),h('.network-name',{style:{color:'#039396',}},'Ethereum Social Main Net'),]) case'ropsten-test-network':return h('.network-indicator',[h('.menu-icon.red-dot'),h('.network-name',{style:{color:'#ff6666',}},'Ropsten Test Net'),h('i.fa.fa-caret-down.fa-lg'),]) case'kovan-test-network':return h('.network-indicator',[h('.menu-icon.hollow-diamond'),h('.network-name',{style:{color:'#690496',}},'Kovan Test Net'),h('i.fa.fa-caret-down.fa-lg'),]) case'rinkeby-test-network':return h('.network-indicator',[h('.menu-icon.golden-square'),h('.network-name',{style:{color:'#e7a218',}},'Rinkeby Test Net'),h('i.fa.fa-caret-down.fa-lg'),]) default:return h('.network-indicator',[h('i.fa.fa-question-circle.fa-lg',{style:{margin:'10px',color:'rgb(125, 128, 130)',},}),h('.network-name',{style:{color:'#AEAEAE',}},'Private Network'),h('i.fa.fa-caret-down.fa-lg'),])}})(),]))}